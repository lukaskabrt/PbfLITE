using BenchmarkDotNet.Attributes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PbfLite.Benchmark;

public class ReadPrimitivesBenchmarks
{
    private static readonly byte[] Fixed32Data = [0x01, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF];

    [Benchmark]
    public uint ReadFixed32()
    {
        var block = PbfBlock.Create(Fixed32Data);
        block.ReadFixed32();
        block.ReadFixed32();
        block.ReadFixed32();
        block.ReadFixed32();
        block.ReadFixed32();
        return block.ReadFixed32();
    }

    private static readonly byte[] Fixed64Data = [
        0x01, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
        0x01, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF
    ];

    [Benchmark]
    public ulong ReadFixed64()
    {
        var block = PbfBlock.Create(Fixed64Data);
        block.ReadFixed64();
        block.ReadFixed64();
        block.ReadFixed64();
        block.ReadFixed64();
        block.ReadFixed64();
        return block.ReadFixed64();
    }

    private static readonly byte[] VarInt32Data = [0x00, 0x01, 0x7F, 0x80, 0x01, 0x80, 0x80, 0x01, 0x80, 0x80, 0x80, 0x01, 0x80, 0x80, 0x80, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];

    [Benchmark]
    public uint ReadVarInt32()
    {
        var block = PbfBlock.Create(VarInt32Data);

        block.ReadVarInt32();
        block.ReadVarInt32();
        block.ReadVarInt32();
        block.ReadVarInt32();
        block.ReadVarInt32();
        block.ReadVarInt32();
        return block.ReadVarInt32();
    }
}
